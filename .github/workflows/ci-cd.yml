name: Node.js CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }} - ${{secrets.HOST}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          env
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 22 ${{ secrets.HOST }} >> ~/.ssh/known_host

      - name: Deploy to server
        run: |
          ssh -v -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} <<'ENDSSH'
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_TOKEN}}
          cd nest-js-auth-app/
          docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}:${{secrets.DOCKER_TAG}}
          cat > docker-compose.yml <<EOF
          version: "3.9"
          services:
            nestjs-ci-cd-image-cl:
              image: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ secrets.DOCKER_TAG }}
              build: .
              container_name: ${{ secrets.CONTAINER }}
              ports:
                - '5055:3033'
              env_file:
                - .env
              depends_on:
                - super-db-nestjs
              networks:
                - super-net
              volumes:
                - .:/usr/src/app
                - /usr/src/app/node_modules
              command: npm run start:dev
            super-db-nestjs:
              image: postgres
              container_name: nest-js-super-db-image
              environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: saman77071!
                POSTGRES_DATABASE: nestbesicapp
              ports:
                - '5433:5432'
              networks:
                - super-net
              volumes:
                - postgres_data:/var/lib/postgresql/data
          volumes:
            postgres_data:
          networks:
            super-net:
              driver: bridge
          EOF
          docker-compose down || true
          docker-compose up -d
          docker logout
          ENDSSH
          
